rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user owns the document
    function isOwner(resource) {
      return request.auth.uid == resource.data.createdBy;
    }
    
    // Helper function to check if user is admin or has proper permissions
    function hasPermission(requiredPermission) {
      return isAuthenticated() && 
             get(/databases/$(database)/documents/teamMembers/$(request.auth.uid)).data.permissions in [requiredPermission, 'admin'];
    }
    
    // Institutions collection
    match /institutions/{institutionId} {
      allow read, write: if isAuthenticated();
    }
    
    // Team Members collection
    match /teamMembers/{memberId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && request.auth.uid == memberId;
      allow update, delete: if isAuthenticated() && (
        isOwner(resource) || 
        hasPermission('admin') || 
        hasPermission('manager')
      );
    }
    
    // Tasks collection
    match /tasks/{taskId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update, delete: if isAuthenticated() && (
        isOwner(resource) || 
        resource.data.assignedEmail == request.auth.token.email ||
        hasPermission('admin') || 
        hasPermission('manager')
      );
    }
    
    // Projects collection
    match /projects/{projectId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update, delete: if isAuthenticated() && (
        isOwner(resource) || 
        hasPermission('admin') || 
        hasPermission('manager')
      );
    }
    
    // Donations collection
    match /donations/{donationId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update, delete: if isAuthenticated() && (
        isOwner(resource) || 
        hasPermission('admin') || 
        hasPermission('manager')
      );
    }
    
    // Expenses collection
    match /expenses/{expenseId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update, delete: if isAuthenticated() && (
        isOwner(resource) || 
        hasPermission('admin') || 
        hasPermission('manager')
      );
    }
    
    // Reports collection
    match /reports/{reportId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update, delete: if isAuthenticated() && (
        isOwner(resource) || 
        hasPermission('admin') || 
        hasPermission('manager')
      );
    }
    
    // Notifications collection
    match /notifications/{notificationId} {
      allow read: if isAuthenticated() && (
        request.auth.token.email in resource.data.recipients ||
        hasPermission('admin')
      );
      allow create: if isAuthenticated();
      allow update, delete: if isAuthenticated() && (
        isOwner(resource) || 
        hasPermission('admin')
      );
    }
    
    // Analytics and other system collections
    match /analytics/{document=**} {
      allow read, write: if isAuthenticated();
    }
    
    // Allow read/write for development - REMOVE IN PRODUCTION
    match /{document=**} {
      allow read, write: if isAuthenticated();
    }
  }
} 