rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection - Allow authenticated users to read/write their own profile and read others
    match /users/{userId} {
      // Users can read their own profile and other users' profiles
      allow read: if request.auth != null;
      
      // Users can only create/update their own profile
      allow create, update: if request.auth != null && request.auth.uid == userId;
      
      // Only admins can delete user profiles
      allow delete: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Existing collections with updated rules
    match /institutions/{institutionId} {
      allow read, write: if request.auth != null;
    }
    
    match /tasks/{taskId} {
      allow read, write: if request.auth != null;
    }
    
    match /projects/{projectId} {
      allow read, write: if request.auth != null;
    }
    
    match /donations/{donationId} {
      allow read, write: if request.auth != null;
    }
    
    match /expenses/{expenseId} {
      allow read, write: if request.auth != null;
    }
    
    match /reports/{reportId} {
      allow read, write: if request.auth != null;
    }
    
    match /notifications/{notificationId} {
      allow read, write: if request.auth != null;
    }
    
    // Team members collection (legacy - keeping for backward compatibility)
    match /teamMembers/{memberId} {
      allow read, write: if request.auth != null;
    }
    
    // General rule for other collections
    match /{document=**} {
      allow read, write: if request.auth != null;
    }
  }
} 